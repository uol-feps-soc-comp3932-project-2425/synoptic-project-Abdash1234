<launch>
  <!-- Launch Dummy Publisher (general data, if needed) -->
  <node pkg="dummy_publisher" type="dummy_publisher.py" name="dummy_publisher_node" output="screen" />

  <!-- Launch Dummy LaserScan Publisher -->
  <node pkg="dummy_laserscan" type="dummy_laserscan.py" name="dummy_laserscan_node" output="screen" />

  <!-- Launch Dummy Odometry Publisher -->
  <node pkg="dummy_odometry" type="dummy_odometry.py" name="dummy_odometry_node" output="screen" />

  <!-- Publish a static transform from base_link to laser_frame -->
  <!-- This is needed so that the LaserScan data is properly associated with the robot's base -->
  <node pkg="tf2_ros" type="static_transform_publisher" name="base_to_laser_tf" args="0 0 0 0 0 0 base_link laser_frame" />

  <!-- Launch SLAM Node: gmapping -->
  <node pkg="gmapping" type="slam_gmapping" name="slam_gmapping" output="screen">
    <param name="base_frame" value="base_link" />
    <param name="odom_frame" value="odom" />
    <param name="map_update_interval" value="5.0" />
  </node>

  <!-- Launch MQTT Bridge Node -->
  <node pkg="mqtt_bridge" type="mqtt_bridge.py" name="mqtt_bridge_node" output="screen" />

  <!-- Launch RViz for visualization -->
  <node pkg="rviz" type="rviz" name="rviz" output="screen" />
</launch>
